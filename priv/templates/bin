#!/bin/sh

set -e

SCRIPT_DIR="$(dirname "$0")"
RELEASE_ROOT_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
REL_NAME="{{ rel_name }}"
REL_VSN="{{ rel_vsn }}"
ERTS_VSN="{{ erts_vsn }}"
REL_DIR="$RELEASE_ROOT_DIR/releases/$REL_VSN"
ERL_OPTS="{{ erl_opts }}"

find_erts_dir() {
    l_erts_dir="$RELEASE_ROOT_DIR/erts-$ERTS_VSN"
    if [ -d "$l_erts_dir" ]; then
        ERTS_DIR="$l_erts_dir";
        ROOTDIR="$RELEASE_ROOT_DIR"
    else
        l_erl="$(which erl)"
        code="io:format(\"~s\", [code:root_dir()]), halt()."
        l_erl_root="$("$l_erl" -noshell -eval "$code")"
        ERTS_DIR="$l_erl_root/erts-$ERTS_VSN"
        ROOTDIR="$l_erl_root"
    fi
}

find_sys_config() {
    l_possible_sys="$REL_DIR/sys.config"
    if [ -f "$l_possible_sys" ]; then
        SYS_CONFIG="$l_possible_sys"
    fi
}

find_vm_args() {
    l_possible_vm_args="$REL_DIR/vm.args"
    if [ -f "$l_possible_vm_args" ]; then
        VM_ARGS="$l_possible_vm_args"
    fi
}

find_erts_dir
find_sys_config
find_vm_args
export ROOTDIR="$RELEASE_ROOT_DIR"
export BINDIR="$ERTS_DIR/bin"
export EMU="beam"
export PROGNAME="erl"
export LD_LIBRARY_PATH="$ERTS_DIR/lib:$LD_LIBRARY_PATH"
ERTS_LIB_DIR="$ERTS_DIR/../lib"
[ -f "$REL_DIR/$REL_NAME.boot" ] && BOOTFILE="$REL_NAME" || BOOTFILE=start
cd "$ROOTDIR"

# Save extra arguments
ARGS="$@"

# Build arguments for erlexec
set -- "$ERL_OPTS"
[ "$SYS_CONFIG" ] && set -- "$@" -config "$SYS_CONFIG"
[ "$VM_ARGS" ] && set -- "$@" -args_file "$VM_ARGS"
set -- "$@" -boot_var ERTS_LIB_DIR "$ERTS_LIB_DIR" -boot "$REL_DIR/$BOOTFILE" "$ARGS"

# Boot the release
$BINDIR/erlexec $@
